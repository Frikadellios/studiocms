---
import { Cloudinary } from '@cloudinary/url-gen';
import { fill } from '@cloudinary/url-gen/actions/resize';
import { Image } from 'astro:assets';

const cld = new Cloudinary({
  cloud: {
    cloudName: import.meta.env.CLOUDINARY_CLOUD_NAME
  }
});

const { src, ...props } = Astro.props;

let cldSrc = cld.image(src)
                .format('auto')
                .quality('auto')
                .resize(fill('auto').width(props.width).height(props.height));

function isLocalImage(src: string) {
    if (src.startsWith('/')) {
        return true;
    }
    return false;
}


if (src.startsWith('https://')) {
    cldSrc.setDeliveryType('fetch');
}

const imgSRC = isLocalImage(src) ? src : cldSrc.toURL();

interface Props {
    src: string;
    alt: string;
    width: number;
    height: number;
}
---
<Image src={imgSRC} loading="lazy" inferSize={!isLocalImage(src)} {...props} />