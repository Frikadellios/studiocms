---
import Default from "../../layouts/Default.astro"
import { Admins, db } from 'astro:db';
import { lucia } from "../../lib/auth";
import type { Locals } from "./locals";

const locals = Astro.locals as Locals;
const isLoggedIn = locals.isLoggedIn;
const sessions = await lucia.getUserSessions(locals.dbUser.id);

if (!isLoggedIn) {
    return Astro.redirect('/dashboard/login');
}

const getUserName = () => {
    if (locals.isLoggedIn) {
	    if (locals.dbUser.name) {
		    return locals.dbUser.name;
	    } else {
		    return locals.user.username;
	    }
    }
	return null;
};

const adminList = await db.select().from(Admins);

const isAdmin = async (user: string) => {
    if (adminList.includes({GitHubUsername: user})) {
        return true;
    }
    return false;
};

const role = async () => {
    // @ts-ignore
    const title = isAdmin(locals.dbUser.username) ? 'Admin' : 'User';
    return title;
}

---

<Default>
        <div class="dash">
            <div class="dash-header">
                <img src={locals.dbUser.avatar} alt={locals.dbUser.name} height="64px" width="64px">
                <p><bold>{getUserName}</bold>'s Profile</p>
                <form method="post" action="/dashboard/logout">
                    <button>Logout</button>
                </form>
            </div>
        <div>

                <p><bold>Display Name:</bold> {locals.dbUser.name}</p>
                <p><bold>Role:</bold> {role}</p>
                <p><bold>GitHub:</bold> <a href={locals.dbUser.githubURL}>{locals.user.username}</a> 
                { sessions && (
                    <p><bold>Session Expires:</bold> {new Date(sessions[0].expiresAt).toLocaleString()} </p>
                ) } 
                </p>
                
                
            </div>
        </div>
</Default>

<style>
    .dash {
        padding: 2rem;
        border: 2px solid #ccc;
        border-radius: 5rem;
        background-color: #fff;
        margin: 2rem;
    }
    .dash-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding-right: 4rem;
        padding-left: 4rem;
    }
    bold {
        font-weight: bold;
    }
    .font-small {
        font-size: 1rem;
    }
    form {
        display: flex;
        justify-content: flex-end;
    }
    button {
        padding: 1rem;
        background-color: rgb(202, 0, 0);
        font-weight: bold;
        color: #fff;
        border: none;
        border-radius: 99rem;
        cursor: pointer;
    }
</style>