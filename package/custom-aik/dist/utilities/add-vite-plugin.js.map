{"version":3,"sources":["../../src/utilities/has-vite-plugin.ts","../../src/utilities/add-vite-plugin.ts"],"sourcesContent":["import type { AstroConfig, HookParameters } from \"astro\";\nimport type { PluginOption } from \"vite\";\n\nfunction getPluginNames(plugins: AstroConfig[\"vite\"][\"plugins\"]) {\n\tconst names: string[] = [];\n\n\tif (plugins) {\n\t\tfor (const plugin of plugins) {\n\t\t\tif (!plugin) continue;\n\n\t\t\tif (Array.isArray(plugin)) {\n\t\t\t\tnames.push(...getPluginNames(plugin));\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (plugin instanceof Promise) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnames.push(plugin.name);\n\t\t}\n\t}\n\n\treturn names;\n}\n\n/**\n * Checks for the existence of a Vite plugin inside the Astro config.\n *\n * @param {Params} params\n * @param {string|import(\"vite\").PluginOption} params.plugin\n * @param {import(\"astro\").HookParameters<\"astro:config:setup\">[\"config\"]} params.config\n *\n * @see https://astro-integration-kit.netlify.app/utilities/has-vite-plugin/\n *\n * @example\n * ```ts\n * hasVitePlugin({\n * \t\tplugin: \"vite-plugin-my-integration\",\n * \t\tconfig\n * })\n * ```\n */\nexport const hasVitePlugin = ({\n\tplugin,\n\tconfig,\n}: {\n\tplugin: string | PluginOption;\n\tconfig: HookParameters<\"astro:config:setup\">[\"config\"];\n}): boolean => {\n\tif (!plugin || plugin instanceof Promise) return false;\n\n\tconst currentPlugins = new Set(getPluginNames(config?.vite?.plugins));\n\n\tconst plugins = new Set<string>();\n\n\tif (typeof plugin === \"string\") {\n\t\tplugins.add(plugin);\n\t}\n\n\tif (typeof plugin === \"object\") {\n\t\tif (Array.isArray(plugin)) {\n\t\t\tconst names = new Set(\n\t\t\t\tgetPluginNames(plugin as NonNullable<AstroConfig[\"vite\"][\"plugins\"]>),\n\t\t\t);\n\t\t\tfor (const name of names) plugins.add(name);\n\t\t} else {\n\t\t\tplugins.add(plugin.name);\n\t\t}\n\t}\n\n\treturn [...plugins].some((name) => currentPlugins.has(name));\n};\n","import type { HookParameters } from \"astro\";\nimport type { Plugin, PluginOption } from \"vite\";\nimport { hasVitePlugin } from \"./has-vite-plugin.js\";\n\ninterface CommonOptions {\n\tplugin: PluginOption;\n\tupdateConfig: HookParameters<\"astro:config:setup\">[\"updateConfig\"];\n}\n\ninterface UnsafeOptions extends CommonOptions {\n\twarnDuplicated: false;\n\tconfig?: HookParameters<\"astro:config:setup\">[\"config\"];\n\tlogger?: HookParameters<\"astro:config:setup\">[\"logger\"];\n}\n\ninterface SafeOptions extends CommonOptions {\n\twarnDuplicated?: true;\n\tconfig: HookParameters<\"astro:config:setup\">[\"config\"];\n\tlogger: HookParameters<\"astro:config:setup\">[\"logger\"];\n}\n\n/**\n * Adds a [vite plugin](https://vitejs.dev/guide/using-plugins) to the\n * Astro config.\n *\n * @param {Params} params\n * @param {boolean} [params.warnDuplicated=true]\n * @param {import(\"vite\").PluginOption} params.plugin\n * @param {import(\"astro\").HookParameters<\"astro:config:setup\">[\"config\"]} params.config\n * @param {import(\"astro\").HookParameters<\"astro:config:setup\">[\"logger\"]} params.logger\n * @param {import(\"astro\").HookParameters<\"astro:config:setup\">[\"updateConfig\"]} params.updateConfig\n *\n * @see https://astro-integration-kit.netlify.app/utilities/add-vite-plugin/\n *\n * @example\n * ```ts\n * addVitePlugin({\n * \t\tplugin,\n * \t\tconfig,\n * \t\tlogger,\n * \t\tupdateConfig\n * })\n * ```\n */\nexport const addVitePlugin = ({\n\twarnDuplicated = true,\n\tplugin,\n\tconfig,\n\tlogger,\n\tupdateConfig,\n}: UnsafeOptions | SafeOptions) => {\n\tif (warnDuplicated && config && logger && hasVitePlugin({ plugin, config })) {\n\t\tlogger.warn(\n\t\t\t`The Vite plugin \"${\n\t\t\t\t(plugin as Plugin).name\n\t\t\t}\" is already present in your Vite configuration, this plugin may not behave correctly.`,\n\t\t);\n\t}\n\n\tupdateConfig({\n\t\tvite: {\n\t\t\tplugins: [plugin],\n\t\t},\n\t});\n};\n"],"mappings":"AAGA,SAASA,EAAeC,EAAyC,CAChE,IAAMC,EAAkB,CAAC,EAEzB,GAAID,GACH,QAAWE,KAAUF,EACpB,GAAKE,EAEL,IAAI,MAAM,QAAQA,CAAM,EAAG,CAC1BD,EAAM,KAAK,GAAGF,EAAeG,CAAM,CAAC,EACpC,QACD,CAEIA,aAAkB,SAItBD,EAAM,KAAKC,EAAO,IAAI,GAIxB,OAAOD,CACR,CAmBO,IAAME,EAAgB,CAAC,CAC7B,OAAAD,EACA,OAAAE,CACD,IAGe,CACd,GAAI,CAACF,GAAUA,aAAkB,QAAS,MAAO,GAEjD,IAAMG,EAAiB,IAAI,IAAIN,EAAeK,GAAQ,MAAM,OAAO,CAAC,EAE9DJ,EAAU,IAAI,IAMpB,GAJI,OAAOE,GAAW,UACrBF,EAAQ,IAAIE,CAAM,EAGf,OAAOA,GAAW,SACrB,GAAI,MAAM,QAAQA,CAAM,EAAG,CAC1B,IAAMD,EAAQ,IAAI,IACjBF,EAAeG,CAAqD,CACrE,EACA,QAAWI,KAAQL,EAAOD,EAAQ,IAAIM,CAAI,CAC3C,MACCN,EAAQ,IAAIE,EAAO,IAAI,EAIzB,MAAO,CAAC,GAAGF,CAAO,EAAE,KAAMM,GAASD,EAAe,IAAIC,CAAI,CAAC,CAC5D,EC5BO,IAAMC,EAAgB,CAAC,CAC7B,eAAAC,EAAiB,GACjB,OAAAC,EACA,OAAAC,EACA,OAAAC,EACA,aAAAC,CACD,IAAmC,CAC9BJ,GAAkBE,GAAUC,GAAUE,EAAc,CAAE,OAAAJ,EAAQ,OAAAC,CAAO,CAAC,GACzEC,EAAO,KACN,oBACEF,EAAkB,IACpB,wFACD,EAGDG,EAAa,CACZ,KAAM,CACL,QAAS,CAACH,CAAM,CACjB,CACD,CAAC,CACF","names":["getPluginNames","plugins","names","plugin","hasVitePlugin","config","currentPlugins","name","addVitePlugin","warnDuplicated","plugin","config","logger","updateConfig","hasVitePlugin"]}