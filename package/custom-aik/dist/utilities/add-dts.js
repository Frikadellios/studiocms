import{mkdirSync as l,readFileSync as p,writeFileSync as i}from"node:fs";import{dirname as f,relative as g}from"node:path";import{fileURLToPath as s}from"node:url";import{parse as d,prettyPrint as m}from"recast";import y from"recast/parsers/typescript.js";var L=({srcDir:n,logger:a,specifier:e})=>{let o=s(new URL("env.d.ts",n));e instanceof URL&&(e=s(e),e=g(s(n),e),e=e.replaceAll("\\","/"));let t=p(o,"utf8");if(t.includes(`/// <reference types='${e}' />`)||t.includes(`/// <reference types="${e}" />`))return;let r=t.replace("/// <reference types='astro/client' />",`/// <reference types='astro/client' />
/// <reference types='${e}' />`).replace('/// <reference types="astro/client" />',`/// <reference types="astro/client" />
/// <reference types="${e}" />`);r!==t&&(i(o,r),a.info("Updated env.d.ts types"))},P=({name:n,content:a,root:e,srcDir:o,logger:t})=>{let r=new URL(`.astro/${n}.d.ts`,e),c=s(r);L({srcDir:o,logger:t,specifier:r}),l(f(c),{recursive:!0}),i(c,m(d(a,{parser:y}),{tabWidth:4}).code,"utf-8")};export{P as addDts};
//# sourceMappingURL=add-dts.js.map