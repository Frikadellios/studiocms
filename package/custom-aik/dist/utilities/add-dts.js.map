{"version":3,"sources":["../../src/utilities/add-dts.ts"],"sourcesContent":["import { mkdirSync, readFileSync, writeFileSync } from \"node:fs\";\nimport { dirname, relative } from \"node:path\";\nimport { fileURLToPath } from \"node:url\";\nimport type { AstroIntegrationLogger } from \"astro\";\nimport { parse, prettyPrint } from \"recast\";\nimport typescriptParser from \"recast/parsers/typescript.js\";\n\nconst injectEnvDTS = ({\n\tsrcDir,\n\tlogger,\n\tspecifier,\n}: {\n\tsrcDir: URL;\n\tlogger: AstroIntegrationLogger;\n\tspecifier: URL | string;\n}) => {\n\tconst envDTsPath = fileURLToPath(new URL(\"env.d.ts\", srcDir));\n\n\tif (specifier instanceof URL) {\n\t\tspecifier = fileURLToPath(specifier);\n\t\tspecifier = relative(fileURLToPath(srcDir), specifier);\n\t\tspecifier = specifier.replaceAll(\"\\\\\", \"/\");\n\t}\n\n\tconst envDTsContents = readFileSync(envDTsPath, \"utf8\");\n\n\tif (envDTsContents.includes(`/// <reference types='${specifier}' />`)) {\n\t\treturn;\n\t}\n\tif (envDTsContents.includes(`/// <reference types=\"${specifier}\" />`)) {\n\t\treturn;\n\t}\n\n\tconst newEnvDTsContents = envDTsContents\n\t\t.replace(\n\t\t\t`/// <reference types='astro/client' />`,\n\t\t\t`/// <reference types='astro/client' />\\n/// <reference types='${specifier}' />`,\n\t\t)\n\t\t.replace(\n\t\t\t`/// <reference types=\"astro/client\" />`,\n\t\t\t`/// <reference types=\"astro/client\" />\\n/// <reference types=\"${specifier}\" />`,\n\t\t);\n\n\t// the odd case where the user changed the reference to astro/client\n\tif (newEnvDTsContents === envDTsContents) {\n\t\treturn;\n\t}\n\n\twriteFileSync(envDTsPath, newEnvDTsContents);\n\tlogger.info(\"Updated env.d.ts types\");\n};\n\n/**\n * Allows to inject .d.ts file in users project. It will create a file inside `.astro`\n * and reference it from `src/env.d.ts`.\n *\n * @param {object} params\n * @param {string} params.name - The name of the .d.ts file. Eg `test` will generate `.astro/test.d.ts`\n * @param {string} params.content\n * @param {URL} params.root\n * @param {URL} params.srcDir\n * @param {import(\"astro\").AstroIntegrationLogger} params.logger\n *\n * @example\n * ```ts\n * addDts({\n * \t\tname: \"my-integration\",\n * \t \tcontent: `declare module \"virtual:my-integration\" {}`,\n * \t \troot,\n * \t \tsrcDir,\n * \t \tlogger\n * })\n * ```\n *\n * @see https://astro-integration-kit.netlify.app/utilities/add-dts/\n */\nexport const addDts = ({\n\tname,\n\tcontent,\n\troot,\n\tsrcDir,\n\tlogger,\n}: {\n\tname: string;\n\tcontent: string;\n\troot: URL;\n\tsrcDir: URL;\n\tlogger: AstroIntegrationLogger;\n}) => {\n\tconst dtsURL = new URL(`.astro/${name}.d.ts`, root);\n\tconst filePath = fileURLToPath(dtsURL);\n\n\tinjectEnvDTS({\n\t\tsrcDir,\n\t\tlogger,\n\t\tspecifier: dtsURL,\n\t});\n\n\tmkdirSync(dirname(filePath), { recursive: true });\n\twriteFileSync(\n\t\tfilePath,\n\t\tprettyPrint(\n\t\t\tparse(content, {\n\t\t\t\tparser: typescriptParser,\n\t\t\t}),\n\t\t\t{ tabWidth: 4 },\n\t\t).code,\n\t\t\"utf-8\",\n\t);\n};\n"],"mappings":"AAAA,OAAS,aAAAA,EAAW,gBAAAC,EAAc,iBAAAC,MAAqB,UACvD,OAAS,WAAAC,EAAS,YAAAC,MAAgB,YAClC,OAAS,iBAAAC,MAAqB,WAE9B,OAAS,SAAAC,EAAO,eAAAC,MAAmB,SACnC,OAAOC,MAAsB,+BAE7B,IAAMC,EAAe,CAAC,CACrB,OAAAC,EACA,OAAAC,EACA,UAAAC,CACD,IAIM,CACL,IAAMC,EAAaR,EAAc,IAAI,IAAI,WAAYK,CAAM,CAAC,EAExDE,aAAqB,MACxBA,EAAYP,EAAcO,CAAS,EACnCA,EAAYR,EAASC,EAAcK,CAAM,EAAGE,CAAS,EACrDA,EAAYA,EAAU,WAAW,KAAM,GAAG,GAG3C,IAAME,EAAiBb,EAAaY,EAAY,MAAM,EAKtD,GAHIC,EAAe,SAAS,yBAAyBF,CAAS,MAAM,GAGhEE,EAAe,SAAS,yBAAyBF,CAAS,MAAM,EACnE,OAGD,IAAMG,EAAoBD,EACxB,QACA,yCACA;AAAA,wBAAiEF,CAAS,MAC3E,EACC,QACA,yCACA;AAAA,wBAAiEA,CAAS,MAC3E,EAGGG,IAAsBD,IAI1BZ,EAAcW,EAAYE,CAAiB,EAC3CJ,EAAO,KAAK,wBAAwB,EACrC,EA0BaK,EAAS,CAAC,CACtB,KAAAC,EACA,QAAAC,EACA,KAAAC,EACA,OAAAT,EACA,OAAAC,CACD,IAMM,CACL,IAAMS,EAAS,IAAI,IAAI,UAAUH,CAAI,QAASE,CAAI,EAC5CE,EAAWhB,EAAce,CAAM,EAErCX,EAAa,CACZ,OAAAC,EACA,OAAAC,EACA,UAAWS,CACZ,CAAC,EAEDpB,EAAUG,EAAQkB,CAAQ,EAAG,CAAE,UAAW,EAAK,CAAC,EAChDnB,EACCmB,EACAd,EACCD,EAAMY,EAAS,CACd,OAAQV,CACT,CAAC,EACD,CAAE,SAAU,CAAE,CACf,EAAE,KACF,OACD,CACD","names":["mkdirSync","readFileSync","writeFileSync","dirname","relative","fileURLToPath","parse","prettyPrint","typescriptParser","injectEnvDTS","srcDir","logger","specifier","envDTsPath","envDTsContents","newEnvDTsContents","addDts","name","content","root","dtsURL","filePath"]}