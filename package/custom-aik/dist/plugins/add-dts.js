var c=t=>t;import{mkdirSync as g,readFileSync as d,writeFileSync as m}from"node:fs";import{dirname as l,relative as f}from"node:path";import{fileURLToPath as a}from"node:url";import{parse as y,prettyPrint as u}from"recast";import L from"recast/parsers/typescript.js";var T=({srcDir:t,logger:o,specifier:e})=>{let r=a(new URL("env.d.ts",t));e instanceof URL&&(e=a(e),e=f(a(t),e),e=e.replaceAll("\\","/"));let n=d(r,"utf8");if(n.includes(`/// <reference types='${e}' />`)||n.includes(`/// <reference types="${e}" />`))return;let s=n.replace("/// <reference types='astro/client' />",`/// <reference types='astro/client' />
/// <reference types='${e}' />`).replace('/// <reference types="astro/client" />',`/// <reference types="astro/client" />
/// <reference types="${e}" />`);s!==n&&(m(r,s),o.info("Updated env.d.ts types"))},p=({name:t,content:o,root:e,srcDir:r,logger:n})=>{let s=new URL(`.astro/${t}.d.ts`,e),i=a(s);T({srcDir:r,logger:n,specifier:s}),g(l(i),{recursive:!0}),m(i,u(y(o,{parser:L}),{tabWidth:4}).code,"utf-8")};var I=c({name:"addDts",hook:"astro:config:setup",implementation:({logger:t,config:{root:o,srcDir:e}})=>({name:r,content:n})=>p({name:r,content:n,logger:t,root:o,srcDir:e})});export{I as addDtsPlugin};
//# sourceMappingURL=add-dts.js.map