{"version":3,"sources":["../../src/core/define-plugin.ts","../../src/utilities/inject-dev-route.ts","../../src/plugins/inject-dev-route.ts"],"sourcesContent":["import type { Hooks, Plugin } from \"./types.js\";\n\n/**\n * Allows defining a type-safe plugin that can be used in {defineIntegration}.\n *\n * @param {object} plugin\n * @param {string} plugin.name - The name of the plugin, as you want it to be called from the hook\n * @param {string} plugin.hook - The name of the hook where this plugin should be available\n * @param {Function} plugin.implementation - The actual function definition. Refer to docs for usage\n *\n * @see https://astro-integration-kit.netlify.app/utilities/define-plugin/\n *\n * ```ts\n * import { definePlugin } from \"../core/define-plugin.js\";\n * import { addVitePlugin } from \"../utilities/add-vite-plugin.js\";\n * import type { Plugin as VitePlugin } from \"vite\"\n *\n * export const addVitePluginPlugin = definePlugin({\n * \t\tname: \"addVitePlugin\",\n * \t\thook: \"astro:config:setup\",\n * \t\timplementation: ({ updateConfig }) => (plugin: VitePlugin) => addVitePlugin({ plugin, updateConfig }),\n * });\n * ```\n */\nexport const definePlugin = <\n\tTName extends string,\n\tTHook extends keyof Hooks,\n\tTImplementation extends (...args: Array<any>) => any,\n>(\n\tplugin: Plugin<TName, THook, TImplementation>,\n) => plugin;\n","import type { InjectedRoute } from \"astro\";\nimport type { HookParameters } from \"../core/types.js\";\n\ntype HookParameterProperties = Pick<\n\tHookParameters<\"astro:config:setup\">,\n\t\"command\" | \"injectRoute\"\n>;\n\n/**\n * Allows you to inject a route in development only\n *\n * @param {object} params\n * @param {import(\"astro\").HookParameters<\"astro:config:setup\">[\"command\"]} params.command\n * @param {import(\"astro\").HookParameters<\"astro:config:setup\">[\"injectRoute\"]} params.injectRoute\n * @param {import(\"astro\").InjectedRoute} params.injectedRoute\n *\n * @example\n * ```ts\n * injectDevRoute({\n *      command,\n *      injectRoute,\n *      injectedRoute: {\n *          pattern: \"/foo\",\n *          entrypoint: resolve(\"./pages/foo.astro\")\n *      },\n * })\n * ```\n *\n * @see https://astro-integration-kit.netlify.app/utilities/inject-dev-route/\n */\nexport const injectDevRoute = ({\n\tcommand,\n\tinjectRoute,\n\tinjectedRoute,\n}: HookParameterProperties & {\n\tinjectedRoute: InjectedRoute;\n}) => {\n\tif (command === \"dev\") {\n\t\tinjectRoute(injectedRoute);\n\t}\n};\n","import { definePlugin } from \"../core/define-plugin.js\";\nimport { injectDevRoute } from \"../utilities/inject-dev-route.js\";\n\nexport const injectDevRoutePlugin = definePlugin({\n\tname: \"injectDevRoute\",\n\thook: \"astro:config:setup\",\n\timplementation:\n\t\t({ command, injectRoute }) =>\n\t\t(injectedRoute: Parameters<typeof injectDevRoute>[0][\"injectedRoute\"]) =>\n\t\t\tinjectDevRoute({ command, injectRoute, injectedRoute }),\n});\n"],"mappings":"AAwBO,IAAMA,EAKZC,GACIA,ECAE,IAAMC,EAAiB,CAAC,CAC9B,QAAAC,EACA,YAAAC,EACA,cAAAC,CACD,IAEM,CACDF,IAAY,OACfC,EAAYC,CAAa,CAE3B,ECrCO,IAAMC,EAAuBC,EAAa,CAChD,KAAM,iBACN,KAAM,qBACN,eACC,CAAC,CAAE,QAAAC,EAAS,YAAAC,CAAY,IACvBC,GACAC,EAAe,CAAE,QAAAH,EAAS,YAAAC,EAAa,cAAAC,CAAc,CAAC,CACzD,CAAC","names":["definePlugin","plugin","injectDevRoute","command","injectRoute","injectedRoute","injectDevRoutePlugin","definePlugin","command","injectRoute","injectedRoute","injectDevRoute"]}