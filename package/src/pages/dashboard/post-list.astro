---
import Default from "../../layouts/Default.astro"
import type { Locals } from "./locals";
import { db, Admins, Blog, eq, asc } from "astro:db";
import { getAstroBaseURL } from '../../utils';
import FormattedDate from "../../components/FormattedDate.astro";

const locals = Astro.locals as Locals;
const isLoggedIn = locals.isLoggedIn;

const getUserName = () => {
    if (locals.isLoggedIn) {
	    if (locals.dbUser.name) {
		    return locals.dbUser.name;
	    } 
        return locals.user.username;
    }
	return 'Astronaut';
};

const isAdmin = async () => {
    const isAdminCheck = await db.select()
            .from(Admins)
            .where(eq(Admins.GitHubUsername, locals.user.username))
            .catch(() => {
        return false;
    })
    if (isAdminCheck[0] && isAdminCheck[0].GitHubUsername === locals.user.username) {
        return true;
    }
    return false;
};

if (!isLoggedIn) {
    return Astro.redirect(`${getAstroBaseURL()}dashboard/login`);
}

if (await isAdmin() === false) {
    console.log('User is not an admin');
    return Astro.redirect(`${getAstroBaseURL()}dashboard/profile`);
}

const posts = await db.select().from(Blog).orderBy(asc(Blog.publishedAt));
---

<Default>
        <div class="dash">
            <form method="post" action={`${getAstroBaseURL()}dashboard/logout`}>
                <button>Logout</button>
            </form>
            <center>
                <h1>Current Posts</h1>
            </center>
            <div>
                <p class="font-small">
                Currently logged in user: <bold>{getUserName}</bold> | <a href={`${getAstroBaseURL()}dashboard/profile`}>More info...</a>
                </p>

                { posts && posts.map((post: Blog.$inferSelect) => (
                    <div>
                        <p>
                            <bold>{post.title}</bold> - <FormattedDate date={post.publishedAt} />
                            <a href={`${getAstroBaseURL()}dashboard/edit/${post.slug}`} class="btn-edit">Edit</a>
                        </p>
                    </div>
                )) }
            </div>
        </div>
</Default>

<style>
    .dash {
        padding: 2rem;
        border: 2px solid #ccc;
        border-radius: 5rem;
        background-color: #fff;
        margin: 2rem;
        
    }
    bold {
        font-weight: bold;
    }
    .font-small {
        font-size: 1rem;
    }
    form {
        display: flex;
        justify-content: flex-end;
        padding-right: 4rem;
    }
    button {
        padding: 1rem;
        background-color: rgb(202, 0, 0);
        font-weight: bold;
        color: #fff;
        border: none;
        border-radius: 99rem;
        cursor: pointer;
    }
    .btn {
        padding: 1rem;
        background-color: rgb(0, 37, 202);
        font-weight: bold;
        color: #fff;
        border: none;
        border-radius: 99rem;
        cursor: pointer;
    }
    .btn-edit {
        padding: 1rem;
        background-color: rgb(169, 0, 211);
        font-weight: bold;
        color: #fff;
        border: none;
        border-radius: 99rem;
        cursor: pointer;
    }
</style>