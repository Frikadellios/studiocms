---
import Default from "../../layouts/Default.astro"
import type { Locals } from "./locals";
import { db, Admins } from "astro:db";
import { getAstroBaseURL } from '../../utils';

const adminList = await db.select().from(Admins);

const isAdmin = async (user: string) => {
    if (adminList.includes({GitHubUsername: user})) {
        return true;
    }
    return false;
};


const locals = Astro.locals as Locals;
const isLoggedIn = locals.isLoggedIn;

if (!isLoggedIn) {
    return Astro.redirect(`${getAstroBaseURL()}dashboard/login`);
}

const getUserName = () => {
    if (locals.isLoggedIn) {
	    if (locals.dbUser.name) {
		    return locals.dbUser.name;
	    } 
        return locals.user.username;
    }
	return 'Astronaut';
};


---

<Default>
        <div class="dash">
            <form method="post" action={`${getAstroBaseURL()}dashboard/logout`}>
                <button>Logout</button>
            </form>
            <center>
                <h1>Dashboard</h1>
            </center>
            <div>
                <p class="font-small">
                Currently logged in user: <bold>{getUserName}</bold> | <a href={`${getAstroBaseURL()}dashboard/profile`}>More info...</a>
                </p>

                { //@ts-ignore
                 isAdmin(locals.user.username) && (
                    <a href={`${getAstroBaseURL()}dashboard/new-post`}><button class="btn">Create a new post</button></a>
                )}
                { //@ts-ignore
                 isAdmin(locals.user.username) && (
                    <a href={`${getAstroBaseURL()}dashboard/edit/home`}><button class="btn-edit">Edit Home Page</button></a>
                )}
                { //@ts-ignore
                 isAdmin(locals.user.username) && (
                    <a href={`${getAstroBaseURL()}dashboard/edit/about`}><button class="btn-edit">Edit About Page</button></a>
                )}
            </div>
        </div>
</Default>

<style>
    .dash {
        padding: 2rem;
        border: 2px solid #ccc;
        border-radius: 5rem;
        background-color: #fff;
        margin: 2rem;
        
    }
    bold {
        font-weight: bold;
    }
    .font-small {
        font-size: 1rem;
    }
    form {
        display: flex;
        justify-content: flex-end;
        padding-right: 4rem;
    }
    button {
        padding: 1rem;
        background-color: rgb(202, 0, 0);
        font-weight: bold;
        color: #fff;
        border: none;
        border-radius: 99rem;
        cursor: pointer;
    }
    .btn {
        padding: 1rem;
        background-color: rgb(0, 37, 202);
        font-weight: bold;
        color: #fff;
        border: none;
        border-radius: 99rem;
        cursor: pointer;
    }
    .btn-edit {
        padding: 1rem;
        background-color: rgb(169, 0, 211);
        font-weight: bold;
        color: #fff;
        border: none;
        border-radius: 99rem;
        cursor: pointer;
    }
</style>