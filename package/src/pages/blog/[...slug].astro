---
import sitemap from 'sitemap-ext:config';
// @ts-expect-error - This is a missing type definition for the `astro:db` import since its a virtual module during Astro Runtime
import { Blog, db, eq, asc } from 'astro:db';
import { markdown } from '../../utils/marked';
import BlogPost from '../../layouts/BlogPost.astro';
import { getAstroBaseURL } from '../../utils';

// sitemap(false);

sitemap(async ({ addToSitemap }) => {
    const posts = await db.select().from(Blog);

    addToSitemap(posts.map((post) => ({
        slug: post.slug,
    })));
})

const { slug } = Astro.params;

if (!slug) {
	return Astro.redirect(`${getAstroBaseURL}404`);
}

const postArrayed = await db.select().from(Blog).where(eq(Blog.slug, slug));

const post = postArrayed[0];

if (!post) {
	return Astro.redirect(`${getAstroBaseURL}404`);
}

type Props = {
	post: typeof Blog.$inferSelect;
};
---
<BlogPost 
	title={post.title} 
	description={post.description} 
	heroImage={post.heroImage} 
	publishedAt={post.publishedAt} 
	updatedAt={post.updatedAt} >
	<Fragment 
		set:html={markdown(post.content)} />
</BlogPost>

<style>
    .btn {
        padding: 0.5rem;
        background-color: rgb(184, 184, 184);
        font-weight: bold;
        color: #202020;
        border: 1px solid #202020;
        border-radius: 99rem;
        cursor: pointer;
		float: right;
    }
</style>